#!/usr/bin/python
import sys
import argparse
from splinter import Browser
import config

class Colors:

    BLUE = '\033[94m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'
    END = '\033[0m'

# colors
blue = Colors.BLUE
green = Colors.GREEN
yellow = Colors.YELLOW
red = Colors.RED
end = Colors.END

# argument parser
parser = argparse.ArgumentParser(description="Crowbar auto testsuite, run it via 'gordon -a <address> -p <port>'")
parser.add_argument('address',
        help = "crowbar address, for example 192.168.0.2")
parser.add_argument('port',
        help = "crowbar port, for example 80, 3000")
args = parser.parse_args()
user_address = args.address
user_port = args.port


# 'production' browser
# browser = Browser('phantomjs')
# use real browser for test purposes
browser = Browser('chrome')

errors = 0

url = "http://"+ config.username + ":" + config.password + "@" + user_address + ":" + user_port
print(url)
browser.visit(url)

# checking existence of nodes
def checktext(text):

    global errors

    if browser.is_text_present(text):
        print(text + ' test ' + green + 'PASSED' + end)
    else:
        print(text + ' test ' + red + 'FAILED' + end)
        errors += 1 

# check that we can create a new_group
browser.find_by_id('group').first.fill('new_group_1')
browser.find_by_name('commit').first.click()


# final output
print("1st group of tests")
print('=========')
print()
checktext('3 nodes')
checktext('crowbar')
checktext('dashboard')
print()
print("2nd group of tests")
print('==========')
checktext('new_group_1')

print()
print('=======')
print(yellow + "Errors: " + str(errors) + end)
